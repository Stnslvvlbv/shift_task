"""upgrate user table

Revision ID: d2c579c48042
Revises: 0b1fb409e4f1
Create Date: 2025-06-21 14:09:20.964420

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d2c579c48042"
down_revision: Union[str, None] = "0b1fb409e4f1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user", "middle_name", existing_type=sa.VARCHAR(length=100), nullable=False
    )
    op.alter_column(
        "user",
        "hash_password",
        existing_type=sa.VARCHAR(length=255),
        type_=sa.String(length=200),
        existing_nullable=False,
    )
    op.alter_column("user", "is_active", existing_type=sa.BOOLEAN(), nullable=False)
    op.drop_constraint("user_email_key", "user", type_="unique")
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.create_unique_constraint("user_email_key", "user", ["email"])
    op.alter_column("user", "is_active", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "user",
        "hash_password",
        existing_type=sa.String(length=200),
        type_=sa.VARCHAR(length=255),
        existing_nullable=False,
    )
    op.alter_column(
        "user", "middle_name", existing_type=sa.VARCHAR(length=100), nullable=True
    )
    # ### end Alembic commands ###
